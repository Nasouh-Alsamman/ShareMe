import React, { useState } from 'react';
import { AiOutlineCloudUpload } from 'react-icons/ai';
import { useNavigate } from 'react-router-dom';
import { MdDelete } from 'react-icons/md';
import { categories } from '../utils/data';
import { client } from '../client';
import Spinner from './Spinner';

const CreatPin = ({user}) => {
  const [title, setTitle] = useState('');
  const [about, setAbout] = useState('');
  const [loading, setLoading] = useState(false);
  const [destination, setDestination] = useState('');
  const [fields, setFields] = useState(false);
  const [category, setCategory] = useState(null);
  const [imageAsset, setImageAsset] = useState();
  const [wrongImageType, setWrongImageType] = useState(false);

  const navigate = useNavigate();
  const uploadImage = (e) => {
    const {type , name}= e.target.files[0];
    if(type === 'image/png' || type === 'image/svg' || type === 'image/jpeg'|| type === 'image/gif' || type === 'image/tiff'){
      setWrongImageType(false);
      setLoading(true);

      client.assets
            .upload('image', e.target.files[0] , {contentType:type , filename:name})
            .then((document)=>{
              setImageAsset(document);
              setLoading(false);
            })
            .catch((error)=>{
              console.log('Image Upload Error' , error);
            })
    }else{
      setWrongImageType(true);

    }
  }

  const savePIN =()=> {
    if(title && about && destination && imageAsset?.id &&category){
      const doc = {
        _type:'pin',
        title,
        about,
        destination,
        image:{
          _type:'image',
          asset:{
            _type:'reference',
            _ref:imageAsset?._id
          }
        },
        userId:user._id,
        postedBy:{
          _type:'postedBy',
          _ref:user._id,
        },
        category,
      }
      client.create(doc)
        .then(()=>{
          navigate('/')
        })
    }else{
      setFields(true);
      setTimeout(()=>setFields(false),2000)
    }
  }

  return (
    <div className='creatpin'>
       {fields && (<p>Please add all fields.</p>)}
      <div>
        <div>
          <div>
            {loading && <Spinner/>}
            {wrongImageType && <p>Worng Image Type</p>}
            {!imageAsset ?(
            <lable>
              <div>
                <div>
                  <p><AiOutlineCloudUpload /></p>
                  <p>Click to Upload</p>
                </div>
                <p>use hight-quality JPG, SVG, PNG, GIF less than 20MB</p>
              </div> 
             <input type='file' name="upload-image" onChange={uploadImage} />
            </lable>
            ) :(
              <div>
                <img src={imageAsset?.url} alt="uploaded-pic" />
                <button type='button' onClick={()=>setImageAsset(null)}><MdDelete /></button>
              </div>
            )}
          </div>
        </div>

        <div>
          <input type='text' value={title} onChange={(e)=>setTitle(e.target.value)} placeholder="Add Your Title" />
          {user && (<div><img src={user.image} alt="" /> <p>{user.userName}</p></div> )}
          <input type='text' value={about} onChange={(e)=>setAbout(e.target.value)} placeholder="What is Your Pin About?" />
          <input type='text' value={destination} onChange={(e)=>setDestination(e.target.value)} placeholder="Add Destination Link" />
          <div>
              <div>
                <p>Choose Pin Category</p>
                <select onChange={(e)=>setCategory(e.target.value)}> 
                  <option value='other'>Select Category</option>

                  {categories.map((category)=>(
                    <option value={category.name}>{category.name}</option>
                  ))}

                </select>
              </div>

              <div>
                  <button type='button' onClick={savePIN}>Save Pin</button>
              </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default CreatPin